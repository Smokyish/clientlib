{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///trustlines-network.min.js","webpack:///webpack/bootstrap 369228149f5624cf5d57?c25c","webpack:///./~/rxjs/util/root.js?93c3","webpack:///./~/rxjs/Observable.js?4e06","webpack:///./~/rxjs/Subscriber.js?215e","webpack:///./~/rxjs/Observer.js?f098","webpack:///./~/rxjs/Subscription.js?5c58","webpack:///./~/rxjs/symbol/observable.js?1f24","webpack:///./~/rxjs/symbol/rxSubscriber.js?112c","webpack:///./~/rxjs/util/errorObject.js?f49b","webpack:///./~/rxjs/util/isArray.js?b0ea","webpack:///./~/rxjs/util/isFunction.js?51c0","webpack:///./~/rxjs/util/isObject.js?aa2e","webpack:///./src/TLNetwork.ts?51cb","webpack:///./src/Configuration.ts?2af8","webpack:///./src/Contact.ts?1beb","webpack:///./src/CurrencyNetwork.ts?6bfe","webpack:///./src/Event.ts?8250","webpack:///./src/Payment.ts?8047","webpack:///./src/Transaction.ts?489f","webpack:///./src/Trustline.ts?5dd7","webpack:///./src/User.ts?be27","webpack:///./src/Utils.ts?fbb5","webpack:///./~/reconnecting-websocket/dist/index.js?c07b","webpack:///./~/rxjs/InnerSubscriber.js?7259","webpack:///./~/rxjs/OuterSubscriber.js?4197","webpack:///./~/rxjs/Scheduler.js?bb52","webpack:///./~/rxjs/add/operator/map.js?94b1","webpack:///./~/rxjs/add/operator/mergeMap.js?a083","webpack:///./~/rxjs/observable/TimerObservable.js?d0c1","webpack:///./~/rxjs/operator/map.js?9cf8","webpack:///./~/rxjs/operator/mergeMap.js?a0db","webpack:///./~/rxjs/scheduler/Action.js?7296","webpack:///./~/rxjs/scheduler/AsyncAction.js?e414","webpack:///./~/rxjs/scheduler/AsyncScheduler.js?ae69","webpack:///./~/rxjs/scheduler/async.js?6178","webpack:///./~/rxjs/symbol/iterator.js?6b44","webpack:///./~/rxjs/util/UnsubscriptionError.js?bc9d","webpack:///./~/rxjs/util/isArrayLike.js?1a47","webpack:///./~/rxjs/util/isDate.js?8e9e","webpack:///./~/rxjs/util/isNumeric.js?bec4","webpack:///./~/rxjs/util/isPromise.js?68d7","webpack:///./~/rxjs/util/isScheduler.js?a2d5","webpack:///./~/rxjs/util/subscribeToResult.js?c011","webpack:///./~/rxjs/util/toSubscriber.js?f8fe","webpack:///./~/rxjs/util/tryCatch.js?7694","webpack:///(webpack)/buildin/global.js?3698","webpack:///external \"eth-lightwallet\"?5ef7"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_45__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","__window","window","__self","self","WorkerGlobalScope","__global","_root","Error","root_1","toSubscriber_1","observable_1","Observable","subscribe","_isScalar","_subscribe","lift","operator","observable","source","observerOrNext","error","complete","sink","toSubscriber","add","_trySubscribe","syncErrorThrowable","syncErrorThrown","syncErrorValue","err","forEach","next","PromiseCtor","_this","Rx","config","Promise","resolve","reject","subscription","unsubscribe","subscriber","create","__extends","b","__","constructor","isFunction_1","Subscription_1","Observer_1","rxSubscriber_1","Subscriber","_super","destinationOrNext","isStopped","arguments","length","destination","empty","SafeSubscriber","rxSubscriber","_next","_error","_complete","closed","_unsubscribeAndRecycle","_a","_parent","_parents","Subscription","_parentSubscriber","context","isFunction","bind","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","fn","parent","_unsubscribe","flattenUnsubscriptionErrors","errors","reduce","errs","concat","UnsubscriptionError_1","UnsubscriptionError","isArray_1","isObject_1","tryCatch_1","errorObject_1","_subscriptions","hasErrors","index","len","remove","trial","tryCatch","errorObject","e","isArray","sub","isObject","push","teardown","EMPTY","_addParent","tmp","subscriptions","subscriptionIndex","indexOf","splice","getSymbolObservable","$$observable","Symbol","for","$$rxSubscriber","Array","x","Configuration_1","User_1","Transaction_1","Payment_1","Trustline_1","CurrencyNetwork_1","Contact_1","Utils_1","Event_1","TLNetwork","host","port","pollInterval","tokenAddress","useWebSockets","configuration","Configuration","user","User","utils","Utils","currencyNetwork","CurrencyNetwork","event","Event","contact","Contact","transaction","Transaction","trustline","Trustline","payment","Payment","apiUrl","wsApiUrl","getAll","networkAddress","url","proxyAddress","fetchUrl","getInfo","getUsers","getUserOverview","userAddress","validParameters","eventObservable","filter","baseUrl","parameterUrl","buildUrl","createObservable","prepare","receiver","getPath","address","then","response","path","slice","network","accountA","accountB","functionName","parameters","all","getAbi","getTxInfos","abi","txinfos","txOptions","gasPrice","gasLimit","nonce","to","rawTx","lightwallet","txutils","functionTx","gas","confirm","signTx","signedTx","relayTx","data","headers","Headers","Content-Type","options","method","body","JSON","stringify","handleError","json","message","prepareUpdate","debtor","prepareAccept","creditor","userAddressB","eth_lightwallet_1","_password","generateKey","createdUser","keystore","serialize","catch","load","serializedKeystore","deserializeKeystore","getAddresses","keyFromPassword","pwDerivedKey","default","signing","onboardUser","newUser","secretSeed","generateRandomSeed","createVault","password","seedPhrase","ks","generateNewAddress","deserialize","Observable_1","TimerObservable_1","ReconnectingWebSocket","observer","ws","onmessage","parse","onerror","console","close","keepClosed","TimerObservable","mergeMap","fetch","res","key","isWebSocket","CLOSING","isGlobalWebSocket","WebSocket","getDefaultOptions","maxReconnectionDelay","minReconnectionDelay","reconnectionDelayGrowFactor","connectionTimeout","maxRetries","Infinity","debug","bypassProperty","src","dst","set","initReconnectionDelay","Math","random","updateReconnectionDelay","previousDelay","newDelay","LEVEL_0_EVENTS","reassignEventListeners","oldWs","listeners","keys","type","listener","addEventListener","ReconnectingWebsocket","protocols","connectingTimeout","reconnectDelay","retriesCount","shouldRetry","savedOnClose","TypeError","log","params","_i","apply","emitError","code","msg","setTimeout","handleClose","connect","clearTimeout","onclose","reason","_b","_c","_d","fastClose","_e","delay","fakeCloseEvent_1","wasClean","removeEventListener","send","some","Subscriber_1","InnerSubscriber","outerValue","outerIndex","notifyNext","notifyError","notifyComplete","OuterSubscriber","innerValue","innerIndex","innerSub","Scheduler","SchedulerAction","now","schedule","work","state","Date","map_1","map","mergeMap_1","flatMap","isNumeric_1","async_1","isScheduler_1","isDate_1","dueTime","period","scheduler","isNumeric","Number","isScheduler","async","isDate","initialDelay","dispatch","action","project","thisArg","MapOperator","MapSubscriber","count","result","resultSelector","concurrent","POSITIVE_INFINITY","MergeMapOperator","subscribeToResult_1","OuterSubscriber_1","MergeMapSubscriber","hasCompleted","buffer","active","_tryNext","_innerSub","ish","subscribeToResult","_notifyResultSelector","shift","Action","Action_1","AsyncAction","pending","id","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","undefined","execute","_execute","errored","errorValue","actions","Scheduler_1","AsyncScheduler","scheduled","AsyncAction_1","AsyncScheduler_1","symbolIteratorPonyfill","iterator","Set_1","Set","Map_1","Map","getOwnPropertyNames","$$iterator","toString","join","stack","isArrayLike","isNaN","val","parseFloat","isPromise","outerSubscriber","InnerSubscriber_1","isArrayLike_1","isPromise_1","iterator_1","item","done","obs","nextOrObserver","tryCatcher","tryCatchTarget","g","Function","eval"],"mappings":"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","file":"trustlines-network.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"eth-lightwallet\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"TLNetwork\", [\"eth-lightwallet\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TLNetwork\"] = factory(require(\"eth-lightwallet\"));\n\telse\n\t\troot[\"TLNetwork\"] = factory(root[\"eth-lightwallet\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_45__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"eth-lightwallet\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"TLNetwork\", [\"eth-lightwallet\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TLNetwork\"] = factory(require(\"eth-lightwallet\"));\n\telse\n\t\troot[\"TLNetwork\"] = factory(root[\"eth-lightwallet\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_45__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 46);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(44)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar root_1 = __webpack_require__(0);\nvar toSubscriber_1 = __webpack_require__(42);\nvar observable_1 = __webpack_require__(5);\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observables internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remote this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2,5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = __webpack_require__(9);\nvar Subscription_1 = __webpack_require__(4);\nvar Observer_1 = __webpack_require__(3);\nvar rxSubscriber_1 = __webpack_require__(6);\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar isArray_1 = __webpack_require__(8);\nvar isObject_1 = __webpack_require__(10);\nvar isFunction_1 = __webpack_require__(9);\nvar tryCatch_1 = __webpack_require__(43);\nvar errorObject_1 = __webpack_require__(7);\nvar UnsubscriptionError_1 = __webpack_require__(35);\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar root_1 = __webpack_require__(0);\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar root_1 = __webpack_require__(0);\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Configuration_1 = __webpack_require__(12);\r\nvar User_1 = __webpack_require__(19);\r\nvar Transaction_1 = __webpack_require__(17);\r\nvar Payment_1 = __webpack_require__(16);\r\nvar Trustline_1 = __webpack_require__(18);\r\nvar CurrencyNetwork_1 = __webpack_require__(14);\r\nvar Contact_1 = __webpack_require__(13);\r\nvar Utils_1 = __webpack_require__(20);\r\nvar Event_1 = __webpack_require__(15);\r\nvar TLNetwork = (function () {\r\n    function TLNetwork(config) {\r\n        if (config === void 0) { config = {}; }\r\n        var host = config.host, port = config.port, tokenAddress = config.tokenAddress, pollInterval = config.pollInterval, useWebSockets = config.useWebSockets;\r\n        this.configuration = new Configuration_1.Configuration(host, port, pollInterval, useWebSockets);\r\n        this.user = new User_1.User();\r\n        this.utils = new Utils_1.Utils(this.configuration);\r\n        this.currencyNetwork = new CurrencyNetwork_1.CurrencyNetwork(this.utils);\r\n        this.event = new Event_1.Event(this.user, this.utils);\r\n        this.contact = new Contact_1.Contact(this.user, this.utils);\r\n        this.transaction = new Transaction_1.Transaction(this.user, this.utils);\r\n        this.trustline = new Trustline_1.Trustline(this.user, this.utils, this.transaction);\r\n        this.payment = new Payment_1.Payment(this.user, this.utils, this.transaction);\r\n    }\r\n    return TLNetwork;\r\n}());\r\nexports.TLNetwork = TLNetwork;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Configuration = (function () {\r\n    function Configuration(// host of the REST relay server\r\n        host, \r\n        // port of REST relay server\r\n        port, \r\n        // poll interval\r\n        pollInterval, \r\n        // use websockets?\r\n        useWebSockets) {\r\n        if (host === void 0) { host = 'localhost'; }\r\n        if (port === void 0) { port = 5000; }\r\n        if (pollInterval === void 0) { pollInterval = 500; }\r\n        if (useWebSockets === void 0) { useWebSockets = false; }\r\n        this.host = host;\r\n        this.port = port;\r\n        this.pollInterval = pollInterval;\r\n        this.useWebSockets = useWebSockets;\r\n        this.apiUrl = \"http://\" + this.host + \":\" + this.port + \"/api/\";\r\n        this.wsApiUrl = \"ws://\" + this.host + \":\" + this.port + \"/api/\";\r\n    }\r\n    return Configuration;\r\n}());\r\nexports.Configuration = Configuration;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Contact = (function () {\r\n    function Contact(user, utils) {\r\n        this.user = user;\r\n        this.utils = utils;\r\n    }\r\n    Contact.prototype.getAll = function (networkAddress) {\r\n        var _a = this, user = _a.user, utils = _a.utils;\r\n        var url = \"networks/\" + networkAddress + \"/users/0x\" + user.proxyAddress + \"/contacts\";\r\n        return utils.fetchUrl(url);\r\n    };\r\n    return Contact;\r\n}());\r\nexports.Contact = Contact;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar CurrencyNetwork = (function () {\r\n    function CurrencyNetwork(utils) {\r\n        this.utils = utils;\r\n    }\r\n    CurrencyNetwork.prototype.getAll = function () {\r\n        return this.utils.fetchUrl(\"networks\");\r\n    };\r\n    CurrencyNetwork.prototype.getInfo = function (networkAddress) {\r\n        return this.utils.fetchUrl(\"networks/\" + networkAddress);\r\n    };\r\n    CurrencyNetwork.prototype.getUsers = function (networkAddress) {\r\n        return this.utils.fetchUrl(\"networks/\" + networkAddress + \"/users\");\r\n    };\r\n    CurrencyNetwork.prototype.getUserOverview = function (networkAddress, userAddress) {\r\n        return this.utils.fetchUrl(\"networks/\" + networkAddress + \"/users/0x\" + userAddress);\r\n    };\r\n    return CurrencyNetwork;\r\n}());\r\nexports.CurrencyNetwork = CurrencyNetwork;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Event = (function () {\r\n    function Event(user, utils) {\r\n        this.user = user;\r\n        this.utils = utils;\r\n        this.validParameters = ['type', 'fromBlock', 'toBlock'];\r\n    }\r\n    Event.prototype.eventObservable = function (networkAddress, filter) {\r\n        var _a = this, user = _a.user, utils = _a.utils, validParameters = _a.validParameters;\r\n        var baseUrl = \"networks/\" + networkAddress + \"/users/0x\" + user.proxyAddress + \"/events\";\r\n        var parameterUrl = utils.buildUrl(baseUrl, validParameters, filter);\r\n        return utils.createObservable(parameterUrl);\r\n    };\r\n    Event.prototype.get = function (networkAddress, filter) {\r\n        var _a = this, user = _a.user, utils = _a.utils, validParameters = _a.validParameters;\r\n        var baseUrl = \"networks/\" + networkAddress + \"/users/0x\" + user.proxyAddress + \"/events\";\r\n        var parameterUrl = utils.buildUrl(baseUrl, validParameters, filter);\r\n        return utils.fetchUrl(parameterUrl);\r\n    };\r\n    return Event;\r\n}());\r\nexports.Event = Event;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Payment = (function () {\r\n    function Payment(user, utils, transaction) {\r\n        this.user = user;\r\n        this.utils = utils;\r\n        this.transaction = transaction;\r\n    }\r\n    Payment.prototype.prepare = function (networkAddress, receiver, value) {\r\n        var _this = this;\r\n        return this.getPath(networkAddress, this.user.address, receiver, value)\r\n            .then(function (response) {\r\n            if (response.path.length > 0) {\r\n                return _this.transaction.prepare(networkAddress, 'mediatedTransfer', ['0x' + receiver, value, response.path.slice(1)]);\r\n            }\r\n            else {\r\n                return Promise.reject('Could not find a path with enough capacity');\r\n            }\r\n        });\r\n    };\r\n    Payment.prototype.getPath = function (network, accountA, accountB, value) {\r\n        var url = \"networks/\" + network + \"/users/0x\" + accountA + \"/path/0x\" + accountB;\r\n        return this.utils.fetchUrl(url);\r\n    };\r\n    return Payment;\r\n}());\r\nexports.Payment = Payment;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Transaction = (function () {\r\n    function Transaction(user, utils) {\r\n        this.user = user;\r\n        this.utils = utils;\r\n    }\r\n    Transaction.prototype.prepare = function (networkAddress, functionName, parameters) {\r\n        return Promise.all([this.getAbi(), this.getTxInfos(this.user.address)])\r\n            .then(function (_a) {\r\n            var abi = _a[0], txinfos = _a[1];\r\n            var txOptions = {\r\n                gasPrice: txinfos.gasPrice,\r\n                gasLimit: 1000000,\r\n                value: 0,\r\n                nonce: txinfos.nonce,\r\n                to: networkAddress\r\n            };\r\n            var txObj = {\r\n                rawTx: lightwallet.txutils.functionTx(abi, functionName, parameters, txOptions),\r\n                gasPrice: txinfos.gasPrice,\r\n                nonce: txinfos.nonce,\r\n                gas: 200000\r\n            };\r\n            return txObj;\r\n        });\r\n    };\r\n    Transaction.prototype.confirm = function (rawTx) {\r\n        var _this = this;\r\n        return this.user.signTx(rawTx).then(function (signedTx) { return _this.relayTx(signedTx); });\r\n    };\r\n    Transaction.prototype.getAbi = function () {\r\n        return this.utils.fetchUrl(\"tokenabi\");\r\n    };\r\n    Transaction.prototype.getTxInfos = function (address) {\r\n        return this.utils.fetchUrl(\"txinfos/0x\" + address);\r\n    };\r\n    Transaction.prototype.relayTx = function (data) {\r\n        var headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n        });\r\n        var options = {\r\n            method: 'POST',\r\n            headers: headers,\r\n            body: JSON.stringify({ data: '0x' + data })\r\n        };\r\n        return this.utils.fetchUrl('relay', options);\r\n    };\r\n    Transaction.prototype.handleError = function (error) {\r\n        return Promise.reject(error.json().message || error);\r\n    };\r\n    return Transaction;\r\n}());\r\nexports.Transaction = Transaction;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Trustline = (function () {\r\n    function Trustline(user, utils, transaction) {\r\n        this.user = user;\r\n        this.utils = utils;\r\n        this.transaction = transaction;\r\n    }\r\n    Trustline.prototype.prepareUpdate = function (network, debtor, value) {\r\n        var _a = this, transaction = _a.transaction, user = _a.user;\r\n        return transaction.prepare(network, 'updateCreditline', [\"0x\" + debtor, value]);\r\n    };\r\n    Trustline.prototype.prepareAccept = function (network, creditor) {\r\n        var _a = this, transaction = _a.transaction, user = _a.user;\r\n        return transaction.prepare(network, 'acceptCreditline', [\"0x\" + creditor]);\r\n    };\r\n    Trustline.prototype.getAll = function (networkAddress) {\r\n        var _a = this, user = _a.user, utils = _a.utils;\r\n        return utils.fetchUrl(\"networks/\" + networkAddress + \"/users/0x\" + user.proxyAddress + \"/trustlines\");\r\n    };\r\n    Trustline.prototype.get = function (networkAddress, userAddressB) {\r\n        var _a = this, user = _a.user, utils = _a.utils;\r\n        return utils.fetchUrl(\"networks/\" + networkAddress + \"/users/0x\" + user.proxyAddress + \"/trustlines/\" + userAddressB);\r\n    };\r\n    return Trustline;\r\n}());\r\nexports.Trustline = Trustline;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar eth_lightwallet_1 = __webpack_require__(45);\r\nvar User = (function () {\r\n    function User() {\r\n        this._password = 'ts';\r\n    }\r\n    User.prototype.create = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.generateKey().then(function (address) {\r\n                _this.address = address;\r\n                _this.proxyAddress = '0xb33f...'; // TODO implement\r\n                var createdUser = {\r\n                    address: _this.address,\r\n                    proxyAddress: _this.proxyAddress,\r\n                    keystore: _this.keystore.serialize()\r\n                };\r\n                resolve(createdUser);\r\n            }).catch(function (err) {\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    User.prototype.load = function (serializedKeystore) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (serializedKeystore) {\r\n                _this.keystore = _this.deserializeKeystore(serializedKeystore);\r\n                _this.address = _this.keystore.getAddresses()[0];\r\n                _this.proxyAddress = '0xb33f..'; // TODO implement\r\n                var loadedUser = {\r\n                    address: _this.address,\r\n                    proxyAddress: _this.proxyAddress,\r\n                    keystore: _this.keystore.serialize()\r\n                };\r\n                resolve(loadedUser);\r\n            }\r\n            else {\r\n                reject(new Error('No valid keystore'));\r\n            }\r\n        });\r\n    };\r\n    User.prototype.signTx = function (rawTx) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.keystore.keyFromPassword(_this._password, function (err, pwDerivedKey) {\r\n                if (err) {\r\n                    reject(err);\r\n                }\r\n                else {\r\n                    resolve(eth_lightwallet_1.default.signing.signTx(_this.keystore, pwDerivedKey, rawTx, _this.address));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    User.prototype.onboardUser = function (newUser) {\r\n        // TODO: define relay api\r\n    };\r\n    User.prototype.generateKey = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var secretSeed = eth_lightwallet_1.default.keystore.generateRandomSeed();\r\n            eth_lightwallet_1.default.keystore.createVault({\r\n                password: _this._password,\r\n                seedPhrase: secretSeed\r\n            }, function (err, ks) {\r\n                if (err)\r\n                    reject(err);\r\n                _this.keystore = ks;\r\n                ks.keyFromPassword(_this._password, function (err, pwDerivedKey) {\r\n                    if (err)\r\n                        reject(err);\r\n                    _this.keystore.generateNewAddress(pwDerivedKey);\r\n                    var address = _this.keystore.getAddresses()[0];\r\n                    resolve(address);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    User.prototype.deserializeKeystore = function (serializedKeystore) {\r\n        return eth_lightwallet_1.default.keystore.deserialize(serializedKeystore);\r\n    };\r\n    return User;\r\n}());\r\nexports.User = User;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Observable_1 = __webpack_require__(1);\r\nvar TimerObservable_1 = __webpack_require__(27);\r\n__webpack_require__(26);\r\n__webpack_require__(25);\r\nvar ReconnectingWebSocket = __webpack_require__(21);\r\nvar Utils = (function () {\r\n    function Utils(configuration) {\r\n        this.configuration = configuration;\r\n    }\r\n    Utils.prototype.createObservable = function (url) {\r\n        var _a = this.configuration, useWebSockets = _a.useWebSockets, apiUrl = _a.apiUrl, wsApiUrl = _a.wsApiUrl, pollInterval = _a.pollInterval;\r\n        if (useWebSockets && 'WebSocket' in window) {\r\n            return Observable_1.Observable.create(function (observer) {\r\n                var ws = new ReconnectingWebSocket(\"\" + wsApiUrl + url);\r\n                ws.onmessage = function (e) {\r\n                    var json = JSON.parse(e.data);\r\n                    observer.next(json);\r\n                };\r\n                ws.onerror = function (e) {\r\n                    console.error('An web socket error occured');\r\n                };\r\n                return function () {\r\n                    ws.close(1000, '', { keepClosed: true });\r\n                };\r\n            });\r\n        }\r\n        else {\r\n            return TimerObservable_1.TimerObservable.create(0, pollInterval)\r\n                .mergeMap(function () {\r\n                return fetch(\"\" + apiUrl + url)\r\n                    .then(function (res) { return res.json(); })\r\n                    .catch(function (err) { return new Error(\"Could not get events: \" + err.message); });\r\n            });\r\n        }\r\n    };\r\n    Utils.prototype.fetchUrl = function (url, options) {\r\n        var apiUrl = this.configuration.apiUrl;\r\n        return fetch(\"\" + apiUrl + url, options)\r\n            .then(function (response) { return response.json(); })\r\n            .then(function (json) { return json; })\r\n            .catch(function (error) { return Promise.reject(error.json().message || error); });\r\n    };\r\n    Utils.prototype.buildUrl = function (baseUrl, validParameters, parameters) {\r\n        if (!parameters || typeof parameters !== 'object') {\r\n            return baseUrl;\r\n        }\r\n        for (var key in parameters) {\r\n            if (parameters[key] && validParameters.indexOf(key) !== -1) {\r\n                baseUrl += (baseUrl.indexOf('?') === -1) ? '?' : '&';\r\n                baseUrl += key + \"=\" + parameters[key];\r\n            }\r\n        }\r\n        return baseUrl;\r\n    };\r\n    return Utils;\r\n}());\r\nexports.Utils = Utils;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar isWebSocket = function (constructor) {\n    return constructor && constructor.CLOSING === 2;\n};\nvar isGlobalWebSocket = function () {\n    return typeof WebSocket !== 'undefined' && isWebSocket(WebSocket);\n};\nvar getDefaultOptions = function () { return ({\n    constructor: isGlobalWebSocket() ? WebSocket : null,\n    maxReconnectionDelay: 10000,\n    minReconnectionDelay: 1500,\n    reconnectionDelayGrowFactor: 1.3,\n    connectionTimeout: 4000,\n    maxRetries: Infinity,\n    debug: false,\n}); };\nvar bypassProperty = function (src, dst, name) {\n    Object.defineProperty(dst, name, {\n        get: function () { return src[name]; },\n        set: function (value) { src[name] = value; },\n        enumerable: true,\n        configurable: true,\n    });\n};\nvar initReconnectionDelay = function (config) {\n    return (config.minReconnectionDelay + Math.random() * config.minReconnectionDelay);\n};\nvar updateReconnectionDelay = function (config, previousDelay) {\n    var newDelay = previousDelay * config.reconnectionDelayGrowFactor;\n    return (newDelay > config.maxReconnectionDelay)\n        ? config.maxReconnectionDelay\n        : newDelay;\n};\nvar LEVEL_0_EVENTS = ['onopen', 'onclose', 'onmessage', 'onerror'];\nvar reassignEventListeners = function (ws, oldWs, listeners) {\n    Object.keys(listeners).forEach(function (type) {\n        listeners[type].forEach(function (_a) {\n            var listener = _a[0], options = _a[1];\n            ws.addEventListener(type, listener, options);\n        });\n    });\n    if (oldWs) {\n        LEVEL_0_EVENTS.forEach(function (name) { ws[name] = oldWs[name]; });\n    }\n};\nvar ReconnectingWebsocket = function (url, protocols, options) {\n    var _this = this;\n    if (options === void 0) { options = {}; }\n    var ws;\n    var connectingTimeout;\n    var reconnectDelay = 0;\n    var retriesCount = 0;\n    var shouldRetry = true;\n    var savedOnClose = null;\n    var listeners = {};\n    // require new to construct\n    if (!(this instanceof ReconnectingWebsocket)) {\n        throw new TypeError(\"Failed to construct 'ReconnectingWebSocket': Please use the 'new' operator\");\n    }\n    // Set config. Not using `Object.assign` because of IE11\n    var config = getDefaultOptions();\n    Object.keys(config)\n        .filter(function (key) { return options.hasOwnProperty(key); })\n        .forEach(function (key) { return config[key] = options[key]; });\n    if (!isWebSocket(config.constructor)) {\n        throw new TypeError('Invalid WebSocket constructor. Set `options.constructor`');\n    }\n    var log = config.debug ? function () {\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        return console.log.apply(console, ['RWS:'].concat(params));\n    } : function () { };\n    /**\n     * Not using dispatchEvent, otherwise we must use a DOM Event object\n     * Deferred because we want to handle the close event before this\n     */\n    var emitError = function (code, msg) { return setTimeout(function () {\n        var err = new Error(msg);\n        err.code = code;\n        if (Array.isArray(listeners.error)) {\n            listeners.error.forEach(function (_a) {\n                var fn = _a[0];\n                return fn(err);\n            });\n        }\n        if (ws.onerror) {\n            ws.onerror(err);\n        }\n    }, 0); };\n    var handleClose = function () {\n        log('handleClose', { shouldRetry: shouldRetry });\n        retriesCount++;\n        log('retries count:', retriesCount);\n        if (retriesCount > config.maxRetries) {\n            emitError('EHOSTDOWN', 'Too many failed connection attempts');\n            return;\n        }\n        if (!reconnectDelay) {\n            reconnectDelay = initReconnectionDelay(config);\n        }\n        else {\n            reconnectDelay = updateReconnectionDelay(config, reconnectDelay);\n        }\n        log('handleClose - reconnectDelay:', reconnectDelay);\n        if (shouldRetry) {\n            setTimeout(connect, reconnectDelay);\n        }\n    };\n    var connect = function () {\n        if (!shouldRetry) {\n            return;\n        }\n        log('connect');\n        var oldWs = ws;\n        ws = new config.constructor(url, protocols);\n        connectingTimeout = setTimeout(function () {\n            log('timeout');\n            ws.close();\n            emitError('ETIMEDOUT', 'Connection timeout');\n        }, config.connectionTimeout);\n        log('bypass properties');\n        for (var key in ws) {\n            // @todo move to constant\n            if (['addEventListener', 'removeEventListener', 'close', 'send'].indexOf(key) < 0) {\n                bypassProperty(ws, _this, key);\n            }\n        }\n        ws.addEventListener('open', function () {\n            clearTimeout(connectingTimeout);\n            log('open');\n            reconnectDelay = initReconnectionDelay(config);\n            log('reconnectDelay:', reconnectDelay);\n            retriesCount = 0;\n        });\n        ws.addEventListener('close', handleClose);\n        reassignEventListeners(ws, oldWs, listeners);\n        // because when closing with fastClose=true, it is saved and set to null to avoid double calls\n        ws.onclose = ws.onclose || savedOnClose;\n        savedOnClose = null;\n    };\n    log('init');\n    connect();\n    this.close = function (code, reason, _a) {\n        if (code === void 0) { code = 1000; }\n        if (reason === void 0) { reason = ''; }\n        var _b = _a === void 0 ? {} : _a, _c = _b.keepClosed, keepClosed = _c === void 0 ? false : _c, _d = _b.fastClose, fastClose = _d === void 0 ? true : _d, _e = _b.delay, delay = _e === void 0 ? 0 : _e;\n        log('close - params:', { reason: reason, keepClosed: keepClosed, fastClose: fastClose, delay: delay });\n        shouldRetry = !keepClosed;\n        if (delay) {\n            reconnectDelay = delay;\n        }\n        ws.close(code, reason);\n        if (fastClose) {\n            var fakeCloseEvent_1 = {\n                code: code,\n                reason: reason,\n                wasClean: true,\n            };\n            // execute close listeners soon with a fake closeEvent\n            // and remove them from the WS instance so they\n            // don't get fired on the real close.\n            handleClose();\n            ws.removeEventListener('close', handleClose);\n            // run and remove level2\n            if (Array.isArray(listeners.close)) {\n                listeners.close.forEach(function (_a) {\n                    var listener = _a[0], options = _a[1];\n                    listener(fakeCloseEvent_1);\n                    ws.removeEventListener('close', listener, options);\n                });\n            }\n            // run and remove level0\n            if (ws.onclose) {\n                savedOnClose = ws.onclose;\n                ws.onclose(fakeCloseEvent_1);\n                ws.onclose = null;\n            }\n        }\n    };\n    this.send = function (data) {\n        ws.send(data);\n    };\n    this.addEventListener = function (type, listener, options) {\n        if (Array.isArray(listeners[type])) {\n            if (!listeners[type].some(function (_a) {\n                var l = _a[0];\n                return l === listener;\n            })) {\n                listeners[type].push([listener, options]);\n            }\n        }\n        else {\n            listeners[type] = [[listener, options]];\n        }\n        ws.addEventListener(type, listener, options);\n    };\n    this.removeEventListener = function (type, listener, options) {\n        if (Array.isArray(listeners[type])) {\n            listeners[type] = listeners[type].filter(function (_a) {\n                var l = _a[0];\n                return l !== listener;\n            });\n        }\n        ws.removeEventListener(type, listener, options);\n    };\n};\nmodule.exports = ReconnectingWebsocket;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nexports.InnerSubscriber = InnerSubscriber;\n//# sourceMappingURL=InnerSubscriber.js.map\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nexports.OuterSubscriber = OuterSubscriber;\n//# sourceMappingURL=OuterSubscriber.js.map\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(1);\nvar map_1 = __webpack_require__(28);\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(1);\nvar mergeMap_1 = __webpack_require__(29);\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = __webpack_require__(38);\nvar Observable_1 = __webpack_require__(1);\nvar async_1 = __webpack_require__(33);\nvar isScheduler_1 = __webpack_require__(40);\nvar isDate_1 = __webpack_require__(37);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable = (function (_super) {\n    __extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) { dueTime = 0; }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric_1.isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler_1.isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler_1.isScheduler(scheduler)) {\n            scheduler = async_1.async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate_1.isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) { initialDelay = 0; }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_1.Observable));\nexports.TimerObservable = TimerObservable;\n//# sourceMappingURL=TimerObservable.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    if (typeof project !== 'function') {\n        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return this.lift(new MapOperator(project, thisArg));\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar subscribeToResult_1 = __webpack_require__(41);\nvar OuterSubscriber_1 = __webpack_require__(23);\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = __webpack_require__(4);\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = __webpack_require__(0);\nvar Action_1 = __webpack_require__(30);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = __webpack_require__(24);\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar AsyncAction_1 = __webpack_require__(31);\nvar AsyncScheduler_1 = __webpack_require__(32);\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar root_1 = __webpack_require__(0);\nfunction symbolIteratorPonyfill(root) {\n    var Symbol = root.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root_1.root);\n/**\n * @deprecated use iterator instead\n */\nexports.$$iterator = exports.iterator;\n//# sourceMappingURL=iterator.js.map\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nexports.isArrayLike = (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArrayLike.js.map\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\nexports.isDate = isDate;\n//# sourceMappingURL=isDate.js.map\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar isArray_1 = __webpack_require__(8);\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nexports.isPromise = isPromise;\n//# sourceMappingURL=isPromise.js.map\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar root_1 = __webpack_require__(0);\nvar isArrayLike_1 = __webpack_require__(36);\nvar isPromise_1 = __webpack_require__(39);\nvar isObject_1 = __webpack_require__(10);\nvar Observable_1 = __webpack_require__(1);\nvar iterator_1 = __webpack_require__(34);\nvar InnerSubscriber_1 = __webpack_require__(22);\nvar observable_1 = __webpack_require__(5);\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike_1.isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root_1.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[iterator_1.iterator] === 'function') {\n        var iterator = result[iterator_1.iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[observable_1.observable] === 'function') {\n        var obs = result[observable_1.observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\nexports.subscribeToResult = subscribeToResult;\n//# sourceMappingURL=subscribeToResult.js.map\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Subscriber_1 = __webpack_require__(2);\nvar rxSubscriber_1 = __webpack_require__(6);\nvar Observer_1 = __webpack_require__(3);\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar errorObject_1 = __webpack_require__(7);\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_45__;\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(11);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// trustlines-network.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 46);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 369228149f5624cf5d57","\"use strict\";\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/root.js\n// module id = 0\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observables internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remote this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2,5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observable.js\n// module id = 1\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscriber.js\n// module id = 2\n// module chunks = 0 1","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observer.js\n// module id = 3\n// module chunks = 0 1","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscription.js\n// module id = 4\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/observable.js\n// module id = 5\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/rxSubscriber.js\n// module id = 6\n// module chunks = 0 1","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/errorObject.js\n// module id = 7\n// module chunks = 0 1","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isArray.js\n// module id = 8\n// module chunks = 0 1","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isFunction.js\n// module id = 9\n// module chunks = 0 1","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isObject.js\n// module id = 10\n// module chunks = 0 1","import { Configuration } from './Configuration'\nimport { User } from './User'\nimport { Transaction } from './Transaction'\nimport { Payment } from './Payment'\nimport { Trustline } from './Trustline'\nimport { CurrencyNetwork } from './CurrencyNetwork'\nimport { Contact } from './Contact'\nimport { Utils } from './Utils'\nimport { Event } from './Event'\n\nimport { Observable } from 'rxjs/Observable'\n\nexport class TLNetwork {\n  public configuration: Configuration\n  public user: User\n  public transaction: Transaction\n  public payment: Payment\n  public trustline: Trustline\n  public currencyNetwork: CurrencyNetwork\n  public contact: Contact\n  public utils: Utils\n  public event: Event\n\n  constructor (config: any = {}) {\n    const { host, port, tokenAddress, pollInterval, useWebSockets } = config\n    this.configuration = new Configuration(host, port, pollInterval, useWebSockets)\n    this.user = new User()\n    this.utils = new Utils(this.configuration)\n    this.currencyNetwork = new CurrencyNetwork(this.utils)\n    this.event = new Event(this.user, this.utils)\n    this.contact = new Contact(this.user, this.utils)\n    this.transaction = new Transaction(this.user, this.utils)\n    this.trustline = new Trustline(this.user, this.utils, this.transaction)\n    this.payment = new Payment(this.user, this.utils, this.transaction)\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/TLNetwork.ts","export class Configuration {\n  // url of rest api\n  public apiUrl: string\n  // url of websocket api\n  public wsApiUrl: string\n\n  constructor (// host of the REST relay server\n    public host: string = 'localhost',\n    // port of REST relay server\n    public port: number = 5000,\n    // poll interval\n    public pollInterval: number = 500,\n    // use websockets?\n    public useWebSockets: boolean = false) {\n    this.apiUrl = `http://${this.host}:${this.port}/api/`\n    this.wsApiUrl = `ws://${this.host}:${this.port}/api/`\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Configuration.ts","import { User } from './User'\nimport { Utils } from './Utils'\n\nexport class Contact {\n\n  constructor (private user: User, private utils: Utils) {\n  }\n\n  public getAll (networkAddress: string): Promise<string[]> {\n    const { user, utils } = this\n    const url = `networks/${networkAddress}/users/0x${user.proxyAddress}/contacts`\n    return utils.fetchUrl(url)\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Contact.ts","import { User } from './User'\nimport { Utils } from './Utils'\n\nexport class CurrencyNetwork {\n\n  constructor (private utils: Utils) {\n  }\n\n  public getAll (): Promise<any[]> {\n    return this.utils.fetchUrl(`networks`)\n  }\n\n  public getInfo (networkAddress: string): Promise<object> {\n    return this.utils.fetchUrl(`networks/${networkAddress}`)\n  }\n\n  public getUsers (networkAddress: string): Promise<object[]> {\n    return this.utils.fetchUrl(`networks/${networkAddress}/users`)\n  }\n\n  public getUserOverview (networkAddress: string, userAddress: string): Promise<object> {\n    return this.utils.fetchUrl(`networks/${networkAddress}/users/0x${userAddress}`)\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CurrencyNetwork.ts","import { Utils } from './Utils'\nimport { User } from './User'\n\nimport { Observable } from 'rxjs/Observable'\n\nexport class Event {\n\n  private validParameters = [ 'type', 'fromBlock', 'toBlock' ]\n\n  constructor (private user: User, private utils: Utils) {\n  }\n\n  public eventObservable (networkAddress: string, filter?: object): Observable<any> {\n    const { user, utils, validParameters } = this\n    const baseUrl = `networks/${networkAddress}/users/0x${user.proxyAddress}/events`\n    const parameterUrl = utils.buildUrl(baseUrl, validParameters, filter)\n    return utils.createObservable(parameterUrl)\n  }\n\n  public get (networkAddress: string, filter?: object): Promise<object[]> {\n    const { user, utils, validParameters } = this\n    const baseUrl = `networks/${networkAddress}/users/0x${user.proxyAddress}/events`\n    const parameterUrl = utils.buildUrl(baseUrl, validParameters, filter)\n    return utils.fetchUrl(parameterUrl)\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Event.ts","import { Utils } from './Utils'\nimport { User } from './User'\nimport { Transaction } from './Transaction'\n\nexport class Payment {\n\n  constructor (private user: User,\n               private utils: Utils,\n               private transaction: Transaction) {\n  }\n\n  public prepare (networkAddress: string, receiver: string, value: number): Promise<any> {\n    return this.getPath(networkAddress, this.user.address, receiver, value)\n      .then((response) => {\n        if (response.path.length > 0) {\n          return this.transaction.prepare(\n            networkAddress,\n            'mediatedTransfer',\n            [ '0x' + receiver, value, response.path.slice(1) ]\n          )\n        } else {\n          return Promise.reject<string>('Could not find a path with enough capacity')\n        }\n      })\n  }\n\n  public getPath (network: string, accountA: string, accountB: string, value: number): Promise<any> {\n    const url = `networks/${network}/users/0x${accountA}/path/0x${accountB}`\n    return this.utils.fetchUrl(url)\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Payment.ts","import { User } from './User'\nimport { Utils } from './Utils'\n\ndeclare let lightwallet: any\n\nexport class Transaction {\n\n  constructor (private user: User, private utils: Utils) {\n  }\n\n  public prepare (networkAddress: string, functionName: string, parameters: any[]): Promise<any> {\n    return Promise.all([ this.getAbi(), this.getTxInfos(this.user.address) ])\n      .then(([ abi, txinfos ]) => {\n        const txOptions = {\n          gasPrice: txinfos.gasPrice,\n          gasLimit: 1000000,\n          value: 0,\n          nonce: txinfos.nonce,\n          to: networkAddress\n        }\n        const txObj = {\n          rawTx: lightwallet.txutils.functionTx(abi, functionName, parameters, txOptions),\n          gasPrice: txinfos.gasPrice,\n          nonce: txinfos.nonce,\n          gas: 200000\n        }\n        return txObj\n      })\n  }\n\n  public confirm (rawTx: string): Promise<string> {\n    return this.user.signTx(rawTx).then(signedTx => this.relayTx(signedTx))\n  }\n\n  private getAbi (): Promise<any> {\n    return this.utils.fetchUrl(`tokenabi`)\n  }\n\n  private getTxInfos (address: string): Promise<any> {\n    return this.utils.fetchUrl(`txinfos/0x${address}`)\n  }\n\n  private relayTx (data: string): Promise<string> {\n    const headers = new Headers({\n      'Content-Type': 'application/json'\n    })\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify({ data: '0x' + data })\n    }\n    return this.utils.fetchUrl('relay', options)\n  }\n\n  private handleError (error: any) {\n    return Promise.reject(error.json().message || error)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Transaction.ts","import { Utils } from './Utils'\nimport { User } from './User'\nimport { Transaction } from './Transaction'\n\nexport class Trustline {\n\n  constructor (private user: User,\n               private utils: Utils,\n               private transaction: Transaction) {\n  }\n\n  public prepareUpdate (network: string, debtor: string, value: number): Promise<string> {\n    const { transaction, user } = this\n    return transaction.prepare(network, 'updateCreditline', [ `0x${debtor}`, value ])\n  }\n\n  public prepareAccept (network: string, creditor: string): Promise<string> {\n    const { transaction, user } = this\n    return transaction.prepare(network, 'acceptCreditline', [ `0x${creditor}` ])\n  }\n\n  public getAll (networkAddress: string): Promise<object[]> {\n    const { user, utils } = this\n    return utils.fetchUrl(`networks/${networkAddress}/users/0x${user.proxyAddress}/trustlines`)\n  }\n\n  public get (networkAddress: string, userAddressB: string): Promise<object> {\n    const { user, utils } = this\n    return utils.fetchUrl(`networks/${networkAddress}/users/0x${user.proxyAddress}/trustlines/${userAddressB}`)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Trustline.ts","import lightwallet from 'eth-lightwallet'\n\nexport class User {\n\n  public address: string\n  public proxyAddress: string\n  public keystore: any\n\n  private _password = 'ts'\n\n  public create (): Promise<object> {\n    return new Promise((resolve, reject) => {\n      this.generateKey().then((address) => {\n        this.address = address\n        this.proxyAddress = '0xb33f...' // TODO implement\n        const createdUser = {\n          address: this.address,\n          proxyAddress: this.proxyAddress,\n          keystore: this.keystore.serialize()\n        }\n        resolve(createdUser)\n      }).catch((err) => {\n        reject(err)\n      })\n    })\n  }\n\n  public load (serializedKeystore: string): Promise<object> {\n    return new Promise((resolve, reject) => {\n      if (serializedKeystore) { // TODO: check if valid keystore\n        this.keystore = this.deserializeKeystore(serializedKeystore)\n        this.address = this.keystore.getAddresses()[ 0 ]\n        this.proxyAddress = '0xb33f..' // TODO implement\n        const loadedUser = {\n          address: this.address,\n          proxyAddress: this.proxyAddress,\n          keystore: this.keystore.serialize()\n        }\n        resolve(loadedUser)\n      } else {\n        reject(new Error('No valid keystore'))\n      }\n    })\n  }\n\n  public signTx (rawTx: any): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      this.keystore.keyFromPassword(this._password, (err: any, pwDerivedKey: any) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(lightwallet.signing.signTx(this.keystore, pwDerivedKey, rawTx, this.address))\n        }\n      })\n    })\n  }\n\n  public onboardUser (newUser: string) {\n    // TODO: define relay api\n  }\n\n  private generateKey (): Promise<string> {\n    return new Promise((resolve, reject) => {\n      let secretSeed = lightwallet.keystore.generateRandomSeed()\n      lightwallet.keystore.createVault({\n        password: this._password,\n        seedPhrase: secretSeed\n      }, (err: any, ks: any) => {\n        if (err) reject(err)\n        this.keystore = ks\n        ks.keyFromPassword(this._password, (err: any, pwDerivedKey: any) => {\n          if (err) reject(err)\n          this.keystore.generateNewAddress(pwDerivedKey)\n          const address = this.keystore.getAddresses()[ 0 ]\n          resolve(address)\n        })\n      })\n    })\n  }\n\n  private deserializeKeystore (serializedKeystore: string) {\n    return lightwallet.keystore.deserialize(serializedKeystore)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/User.ts","import { Observable } from 'rxjs/Observable'\nimport { TimerObservable } from 'rxjs/observable/TimerObservable'\nimport 'rxjs/add/operator/mergeMap'\nimport 'rxjs/add/operator/map'\nimport { Observer } from 'rxjs/Observer'\n\nimport { Configuration } from './Configuration'\n\nconst ReconnectingWebSocket = require('reconnecting-websocket')\n\nexport class Utils {\n\n  constructor (private configuration: Configuration) {\n  }\n\n  public createObservable (url: string): Observable<any> {\n    const { useWebSockets, apiUrl, wsApiUrl, pollInterval } = this.configuration\n    if (useWebSockets && 'WebSocket' in window) {\n      return Observable.create((observer: Observer<any>) => {\n        let ws = new ReconnectingWebSocket(`${wsApiUrl}${url}`)\n        ws.onmessage = (e: MessageEvent) => {\n          const json = JSON.parse(e.data)\n          observer.next(json)\n        }\n        ws.onerror = (e: ErrorEvent) => {\n          console.error('An web socket error occured')\n        }\n        return () => {\n          ws.close(1000, '', { keepClosed: true })\n        }\n      })\n    } else {\n      return TimerObservable.create(0, pollInterval)\n        .mergeMap(() =>\n          fetch(`${apiUrl}${url}`)\n            .then(res => res.json())\n            .catch(err => new Error(`Could not get events: ${err.message}`))\n        )\n    }\n  }\n\n  public fetchUrl (url: string, options?: object): Promise<any> {\n    const { apiUrl } = this.configuration\n    return fetch(`${apiUrl}${url}`, options)\n      .then(response => response.json())\n      .then(json => json)\n      .catch(error => Promise.reject(error.json().message || error))\n  }\n\n  public buildUrl (baseUrl: string, validParameters: string[], parameters?: any): string {\n    if (!parameters || typeof parameters !== 'object') {\n      return baseUrl\n    }\n    for (let key in parameters) {\n      if (parameters[ key ] && validParameters.indexOf(key) !== -1) {\n        baseUrl += (baseUrl.indexOf('?') === -1) ? '?' : '&'\n        baseUrl += `${key}=${parameters[ key ]}`\n      }\n    }\n    return baseUrl\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Utils.ts","\"use strict\";\nvar isWebSocket = function (constructor) {\n    return constructor && constructor.CLOSING === 2;\n};\nvar isGlobalWebSocket = function () {\n    return typeof WebSocket !== 'undefined' && isWebSocket(WebSocket);\n};\nvar getDefaultOptions = function () { return ({\n    constructor: isGlobalWebSocket() ? WebSocket : null,\n    maxReconnectionDelay: 10000,\n    minReconnectionDelay: 1500,\n    reconnectionDelayGrowFactor: 1.3,\n    connectionTimeout: 4000,\n    maxRetries: Infinity,\n    debug: false,\n}); };\nvar bypassProperty = function (src, dst, name) {\n    Object.defineProperty(dst, name, {\n        get: function () { return src[name]; },\n        set: function (value) { src[name] = value; },\n        enumerable: true,\n        configurable: true,\n    });\n};\nvar initReconnectionDelay = function (config) {\n    return (config.minReconnectionDelay + Math.random() * config.minReconnectionDelay);\n};\nvar updateReconnectionDelay = function (config, previousDelay) {\n    var newDelay = previousDelay * config.reconnectionDelayGrowFactor;\n    return (newDelay > config.maxReconnectionDelay)\n        ? config.maxReconnectionDelay\n        : newDelay;\n};\nvar LEVEL_0_EVENTS = ['onopen', 'onclose', 'onmessage', 'onerror'];\nvar reassignEventListeners = function (ws, oldWs, listeners) {\n    Object.keys(listeners).forEach(function (type) {\n        listeners[type].forEach(function (_a) {\n            var listener = _a[0], options = _a[1];\n            ws.addEventListener(type, listener, options);\n        });\n    });\n    if (oldWs) {\n        LEVEL_0_EVENTS.forEach(function (name) { ws[name] = oldWs[name]; });\n    }\n};\nvar ReconnectingWebsocket = function (url, protocols, options) {\n    var _this = this;\n    if (options === void 0) { options = {}; }\n    var ws;\n    var connectingTimeout;\n    var reconnectDelay = 0;\n    var retriesCount = 0;\n    var shouldRetry = true;\n    var savedOnClose = null;\n    var listeners = {};\n    // require new to construct\n    if (!(this instanceof ReconnectingWebsocket)) {\n        throw new TypeError(\"Failed to construct 'ReconnectingWebSocket': Please use the 'new' operator\");\n    }\n    // Set config. Not using `Object.assign` because of IE11\n    var config = getDefaultOptions();\n    Object.keys(config)\n        .filter(function (key) { return options.hasOwnProperty(key); })\n        .forEach(function (key) { return config[key] = options[key]; });\n    if (!isWebSocket(config.constructor)) {\n        throw new TypeError('Invalid WebSocket constructor. Set `options.constructor`');\n    }\n    var log = config.debug ? function () {\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        return console.log.apply(console, ['RWS:'].concat(params));\n    } : function () { };\n    /**\n     * Not using dispatchEvent, otherwise we must use a DOM Event object\n     * Deferred because we want to handle the close event before this\n     */\n    var emitError = function (code, msg) { return setTimeout(function () {\n        var err = new Error(msg);\n        err.code = code;\n        if (Array.isArray(listeners.error)) {\n            listeners.error.forEach(function (_a) {\n                var fn = _a[0];\n                return fn(err);\n            });\n        }\n        if (ws.onerror) {\n            ws.onerror(err);\n        }\n    }, 0); };\n    var handleClose = function () {\n        log('handleClose', { shouldRetry: shouldRetry });\n        retriesCount++;\n        log('retries count:', retriesCount);\n        if (retriesCount > config.maxRetries) {\n            emitError('EHOSTDOWN', 'Too many failed connection attempts');\n            return;\n        }\n        if (!reconnectDelay) {\n            reconnectDelay = initReconnectionDelay(config);\n        }\n        else {\n            reconnectDelay = updateReconnectionDelay(config, reconnectDelay);\n        }\n        log('handleClose - reconnectDelay:', reconnectDelay);\n        if (shouldRetry) {\n            setTimeout(connect, reconnectDelay);\n        }\n    };\n    var connect = function () {\n        if (!shouldRetry) {\n            return;\n        }\n        log('connect');\n        var oldWs = ws;\n        ws = new config.constructor(url, protocols);\n        connectingTimeout = setTimeout(function () {\n            log('timeout');\n            ws.close();\n            emitError('ETIMEDOUT', 'Connection timeout');\n        }, config.connectionTimeout);\n        log('bypass properties');\n        for (var key in ws) {\n            // @todo move to constant\n            if (['addEventListener', 'removeEventListener', 'close', 'send'].indexOf(key) < 0) {\n                bypassProperty(ws, _this, key);\n            }\n        }\n        ws.addEventListener('open', function () {\n            clearTimeout(connectingTimeout);\n            log('open');\n            reconnectDelay = initReconnectionDelay(config);\n            log('reconnectDelay:', reconnectDelay);\n            retriesCount = 0;\n        });\n        ws.addEventListener('close', handleClose);\n        reassignEventListeners(ws, oldWs, listeners);\n        // because when closing with fastClose=true, it is saved and set to null to avoid double calls\n        ws.onclose = ws.onclose || savedOnClose;\n        savedOnClose = null;\n    };\n    log('init');\n    connect();\n    this.close = function (code, reason, _a) {\n        if (code === void 0) { code = 1000; }\n        if (reason === void 0) { reason = ''; }\n        var _b = _a === void 0 ? {} : _a, _c = _b.keepClosed, keepClosed = _c === void 0 ? false : _c, _d = _b.fastClose, fastClose = _d === void 0 ? true : _d, _e = _b.delay, delay = _e === void 0 ? 0 : _e;\n        log('close - params:', { reason: reason, keepClosed: keepClosed, fastClose: fastClose, delay: delay });\n        shouldRetry = !keepClosed;\n        if (delay) {\n            reconnectDelay = delay;\n        }\n        ws.close(code, reason);\n        if (fastClose) {\n            var fakeCloseEvent_1 = {\n                code: code,\n                reason: reason,\n                wasClean: true,\n            };\n            // execute close listeners soon with a fake closeEvent\n            // and remove them from the WS instance so they\n            // don't get fired on the real close.\n            handleClose();\n            ws.removeEventListener('close', handleClose);\n            // run and remove level2\n            if (Array.isArray(listeners.close)) {\n                listeners.close.forEach(function (_a) {\n                    var listener = _a[0], options = _a[1];\n                    listener(fakeCloseEvent_1);\n                    ws.removeEventListener('close', listener, options);\n                });\n            }\n            // run and remove level0\n            if (ws.onclose) {\n                savedOnClose = ws.onclose;\n                ws.onclose(fakeCloseEvent_1);\n                ws.onclose = null;\n            }\n        }\n    };\n    this.send = function (data) {\n        ws.send(data);\n    };\n    this.addEventListener = function (type, listener, options) {\n        if (Array.isArray(listeners[type])) {\n            if (!listeners[type].some(function (_a) {\n                var l = _a[0];\n                return l === listener;\n            })) {\n                listeners[type].push([listener, options]);\n            }\n        }\n        else {\n            listeners[type] = [[listener, options]];\n        }\n        ws.addEventListener(type, listener, options);\n    };\n    this.removeEventListener = function (type, listener, options) {\n        if (Array.isArray(listeners[type])) {\n            listeners[type] = listeners[type].filter(function (_a) {\n                var l = _a[0];\n                return l !== listener;\n            });\n        }\n        ws.removeEventListener(type, listener, options);\n    };\n};\nmodule.exports = ReconnectingWebsocket;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/reconnecting-websocket/dist/index.js\n// module id = 21\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nexports.InnerSubscriber = InnerSubscriber;\n//# sourceMappingURL=InnerSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/InnerSubscriber.js\n// module id = 22\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nexports.OuterSubscriber = OuterSubscriber;\n//# sourceMappingURL=OuterSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/OuterSubscriber.js\n// module id = 23\n// module chunks = 0 1","\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Scheduler.js\n// module id = 24\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/map.js\n// module id = 25\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMap_1 = require('../../operator/mergeMap');\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/mergeMap.js\n// module id = 26\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = require('../util/isNumeric');\nvar Observable_1 = require('../Observable');\nvar async_1 = require('../scheduler/async');\nvar isScheduler_1 = require('../util/isScheduler');\nvar isDate_1 = require('../util/isDate');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable = (function (_super) {\n    __extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) { dueTime = 0; }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric_1.isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler_1.isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler_1.isScheduler(scheduler)) {\n            scheduler = async_1.async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate_1.isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) { initialDelay = 0; }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_1.Observable));\nexports.TimerObservable = TimerObservable;\n//# sourceMappingURL=TimerObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/TimerObservable.js\n// module id = 27\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    if (typeof project !== 'function') {\n        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return this.lift(new MapOperator(project, thisArg));\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/map.js\n// module id = 28\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/mergeMap.js\n// module id = 29\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/Action.js\n// module id = 30\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsyncAction.js\n// module id = 31\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsyncScheduler.js\n// module id = 32\n// module chunks = 0 1","\"use strict\";\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/async.js\n// module id = 33\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('../util/root');\nfunction symbolIteratorPonyfill(root) {\n    var Symbol = root.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root_1.root);\n/**\n * @deprecated use iterator instead\n */\nexports.$$iterator = exports.iterator;\n//# sourceMappingURL=iterator.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/iterator.js\n// module id = 34\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/UnsubscriptionError.js\n// module id = 35\n// module chunks = 0 1","\"use strict\";\nexports.isArrayLike = (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArrayLike.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isArrayLike.js\n// module id = 36\n// module chunks = 0 1","\"use strict\";\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\nexports.isDate = isDate;\n//# sourceMappingURL=isDate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isDate.js\n// module id = 37\n// module chunks = 0 1","\"use strict\";\nvar isArray_1 = require('../util/isArray');\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isNumeric.js\n// module id = 38\n// module chunks = 0 1","\"use strict\";\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nexports.isPromise = isPromise;\n//# sourceMappingURL=isPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isPromise.js\n// module id = 39\n// module chunks = 0 1","\"use strict\";\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isScheduler.js\n// module id = 40\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('./root');\nvar isArrayLike_1 = require('./isArrayLike');\nvar isPromise_1 = require('./isPromise');\nvar isObject_1 = require('./isObject');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\nvar InnerSubscriber_1 = require('../InnerSubscriber');\nvar observable_1 = require('../symbol/observable');\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike_1.isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root_1.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[iterator_1.iterator] === 'function') {\n        var iterator = result[iterator_1.iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[observable_1.observable] === 'function') {\n        var obs = result[observable_1.observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\nexports.subscribeToResult = subscribeToResult;\n//# sourceMappingURL=subscribeToResult.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/subscribeToResult.js\n// module id = 41\n// module chunks = 0 1","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/toSubscriber.js\n// module id = 42\n// module chunks = 0 1","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/tryCatch.js\n// module id = 43\n// module chunks = 0 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 44\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_45__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"eth-lightwallet\"\n// module id = 45\n// module chunks = 0 1"],"sourceRoot":""}