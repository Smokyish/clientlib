version: 2.1

commands:
  yarn-install:
    description: "Install or restore cached dependencies and save cache."
    steps:
      - restore_cache:
          name: Restore Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  run-code-coverage:
    description: "Run code coverage and upload report."
    parameters:
      flag:
        type: string
    steps:
      - run: yarn coverage -F << parameters.flag >>

jobs:
  lint:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      - yarn-install
      - run:
          name: Run linter
          command: yarn lint

  build:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      - yarn-install
      - run:
          name: Build production
          command: yarn build

  unit-test:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      - yarn-install
      - run:
          name: Run unit tests
          command: yarn test:unit
      - run-code-coverage:
          flag: unit


  integration-test:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      - yarn-install
      - run: yarn test:integration
      - run-code-coverage:
          flag: integration

  e2e-test:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Install Node@10.15 via NVM
          command: |
            set +e
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install v10.15
            nvm alias default v10.15
            nvm use v10.15
            
            # Each step uses the same `$BASH_ENV`, so need to modify it
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
      - run:
          name: Install Yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get update && sudo apt-get install yarn
      - yarn-install
      - run: 
          name: Build Docker Compose
          command: ./.circleci/build_e2e_tests.sh
      - run: 
          name: Start Docker Container and Run E2E Tests
          command: ./.circleci/run_e2e_tests.sh
      - run-code-coverage:
          flag: e2e

workflows:
  version: 2
  default:
    jobs:
      - lint
      - build:
          requires:
            - lint
      - unit-test:
          requires:
            - build
      - integration-test:
          requires:
            - build
      - e2e-test:
          requires:
            - build
